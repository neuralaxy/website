{"version":3,"sources":["components/Header/Header.component.jsx","assets/images/Neurostimduino-angle-02.png","components/Landing/Description/Description.component.jsx","assets/images/Neurostimduino-front-01.png","components/Landing/Features/Features.component.jsx","components/Landing/Specifications/Specifications.component.jsx","components/Landing/Comparisons/Comparisons.component.jsx","assets/images/NeuroStimDuino_Components.png","components/Landing/BoardLayout/BoardLayout.component.jsx","assets/images/NeuroStimDuino_Pinout_Diagram.png","components/Landing/PinoutDiagram/PinoutDiagram.component.jsx","components/Landing/Support/Support.component.jsx","components/Landing/Landing.component.jsx","assets/images/Tutorial-1_Image-1.png","assets/images/Tutorial-1_Image-2.png","assets/images/Tutorial-1_Image-3.jpg","assets/images/Tutorial-1_Image-4.jpg","assets/images/Tutorial-1_Image-5.jpg","assets/images/Tutorial-1_Image-6.png","assets/images/Tutorial-1_Image-7.jpg","assets/images/Tutorial-1_Image-8.jpg","assets/images/Tutorial-1_Image-9.png","assets/images/Tutorial-1_Image-10.jpg","components/Tutorials/Tutorial1/Tutorial1.component.jsx","assets/images/Tutorial-2_Image-1.png","assets/images/Tutorial-2_Image-2.jpg","assets/images/Tutorial-2_Image-3.jpg","assets/images/Tutorial-2_Image-4.png","assets/images/Tutorial-2_Image-5.png","components/Tutorials/Tutorial2/Tutorial2.component.jsx","assets/images/Tutorial-3_Image-1.jpg","assets/images/Tutorial-3_Image-2.jpg","components/Tutorials/Tutorial3/Tutorial3.component.jsx","components/Tutorials/Tutorials.component.jsx","assets/videos/NeuroStimDuino_Demo_final.mp4","components/Demo/Demo.component.jsx","components/Contact/Contact.component.jsx","App.js","index.js"],"names":["Header","history","useHistory","navigateTo","str","push","Navbar","collapseOnSelect","fixed","expand","variant","className","Brand","href","Toggle","Collapse","id","Nav","Link","onClick","Description","video","autoplay","responsive","src","img1","alt","Features","Accordion","defaultActiveKey","Item","eventKey","Body","img2","Specifications","Comparisons","BoardLayout","img3","PinoutDiagram","img4","Support","target","rel","Landing","Tutorial1","img5","img6","img7","img8","img9","img10","Tutorial2","Tutorial3","Tutorials","useState","tutorialNumber","setTutorialNumber","toggleSelected","bar1","document","getElementById","bar2","bar3","classList","add","remove","Demo","controls","demo1","type","Contact","Card","Row","Col","Form","Group","htmlFor","name","placeholder","rows","App","exact","path","Container","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.df0079a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n// import logo from \"../../assets/images/logo_without-bg_500.png\";\r\n// import logoAlt from \"../../assets/images/logo_with-bg_500.png\";\r\n\r\nimport \"./Header.style.css\";\r\n\r\nconst Header = () => {\r\n  let history = useHistory();\r\n\r\n  const navigateTo = (str) => {\r\n    // window.location.replace(`/${str}`);\r\n    history.push(`/${str}`);\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fixed=\"top\"\r\n      expand=\"md\"\r\n      variant=\"dark\"\r\n      className=\"animate-navbar nav-theme justify-content-between navbar-custom\"\r\n    >\r\n      <Navbar.Brand href=\"/\" className=\"navbar-logo\">\r\n        NEURA<span>LAXY</span>\r\n        {/* <img src={logo} alt=\"\" /> */}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        className=\"navbar-collapse-custom\"\r\n      >\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link onClick={() => navigateTo(\"tutorials\")}>Tutorials</Nav.Link>\r\n          <Nav.Link onClick={() => navigateTo(\"demo\")}>Demo</Nav.Link>\r\n          {/* <Nav.Link onClick={() => navigateTo(\"team\")}>Team</Nav.Link> */}\r\n          {/* <Nav.Link onClick={() => navigateTo(\"testimonials\")}>\r\n            Testimonials\r\n          </Nav.Link> */}\r\n          <Nav.Link onClick={() => navigateTo(\"contact\")}>Contact</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Neurostimduino-angle-02.0a8b7af6.png\";","import React from \"react\";\r\nimport img1 from \"../../../assets/images/Neurostimduino-angle-02.png\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\n\r\nimport \"./Description.style.css\";\r\n\r\nconst Description = () => {\r\n  return (\r\n    <>\r\n      <div className=\"video-player\">\r\n        <Vimeo\r\n          className=\"video\"\r\n          video=\"https://player.vimeo.com/video/522539924?h=457ae7e579\"\r\n          autoplay={false}\r\n          responsive\r\n        />\r\n      </div>\r\n      Neurostimulation is the application of short electrical pulses to the\r\n      surface of the skin for the purpose of stimulating the underlying nerves\r\n      and muscles. In recent decades, neurostimulation has been used as part of\r\n      a treatment called Functional Electrical Stimulation (FES) therapy to help\r\n      restore mobility in the paralyzed limb muscles of stroke victims and those\r\n      who have suffered spinal cord injuries. While carrying out research in\r\n      areas such as pain reduction and sensory feedback, scientists have also\r\n      used neurostimulation to study the effect of electrical current on\r\n      neurons.\r\n      <br />\r\n      <br />\r\n      Historically, the delivery of neurostimulation has required the purchase\r\n      of expensive, research-grade equipment or the expensive, time-consuming\r\n      construction of custom hardware. NeuroStimDuino provides an open-source\r\n      alternative in the form of an Arduino shield.\r\n      <br />\r\n      <br />\r\n      <h4>Affordable, Accessible, and Easy to Use</h4>\r\n      NeuroStimDuino was designed to help anyone with an interest in\r\n      neuroscience—students, researchers, and hobbyists alike—to study the\r\n      effects of neurostimulation on muscle contraction. It comes with an I²C\r\n      interface through which external microcontroller boards like the Arduino\r\n      Due can be used to generate different stimulation patterns and control\r\n      other aspects of its operation. Each NeuroStimDuino shield has two\r\n      independent output channels, which can be used to alternate the\r\n      contraction of flexor and extensor muscles or to contract various muscles\r\n      simultaneously. By stacking multiple shields, additional output channels\r\n      can be made available.\r\n      <br />\r\n      <br />\r\n      <i>\r\n        <b>Note:</b> A single output channel on NeuroStimDuino is capped at 20\r\n        mA, which is sufficient to contract small muscles but insufficient to\r\n        contract large ones. Large muscles can be contracted by combining the\r\n        two output channels of NeuroStimDuinos in parallel.\r\n      </i>\r\n      <br />\r\n      <br />\r\n      <div className=\"img-container\">\r\n        <img src={img1} alt=\"\" />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <h4>Opens the Door to Many Different Areas of Research</h4>\r\n      NeuroStimDuino is a platform technology with many possible applications.\r\n      It can be used to conduct research on how neurostimulation affects pain\r\n      management and the restoration of mobility to paralyzed extremities. It\r\n      can also provide sensory feedback to amputees and stimulate the\r\n      transcutaneous vagus nerve to study the effects of neurostimulation on\r\n      depression, arthritis, and other conditions.\r\n      <br />\r\n      <br />\r\n      <i>\r\n        <b>WARNING:</b> This instrument is intended for RESEARCH PURPOSES ONLY.\r\n        It is not intended for human or animal use. Neuralaxy LLC does not\r\n        assume responsibility for injury or damage due to the misuse of this\r\n        instrument.\r\n      </i>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","export default __webpack_public_path__ + \"static/media/Neurostimduino-front-01.fe255cde.png\";","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport img2 from \"../../../assets/images/Neurostimduino-front-01.png\";\r\n\r\nimport \"./Features.style.css\";\r\n\r\nconst Features = () => {\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={0}>\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header className=\"shadow-none\">\r\n            <h3>Features</h3>\r\n          </Accordion.Header>\r\n          <Accordion.Body>\r\n            <ul>\r\n              <li>\r\n                Generates biphasic, rectangular, and constant current\r\n                stimulation pulses with programmable frequency, pulse-width, and\r\n                amplitude\r\n              </li>\r\n              <li>\r\n                Stimulation pulses are charge-balanced, consisting of a cathodic\r\n                phase followed by an anodic phase of equal or unequal amplitudes\r\n                (i.e. the waveform shape can be symmetrical or asymmetrical)\r\n              </li>\r\n              <li>\r\n                Can be configured over I²C, from an external microcontroller\r\n                acting as the controller\r\n              </li>\r\n              <li>\r\n                Can be used as an Arduino shield, due to pin-compatibility with\r\n                Arduino Due and MEGA boards\r\n              </li>\r\n              <li>\r\n                Has two independent output channels per board. Multiple boards\r\n                can be stacked to generate up to 256 channels.\r\n              </li>\r\n              <li>\r\n                Onboard opto-isolators separate digital and analog signals\r\n              </li>\r\n              <li>\r\n                Can be powered by a 9 V battery connected to a DC input or by an\r\n                external 5 V input on VIN. For proper operation, we recommend\r\n                two Li-Ion batteries (e.g. 18650s) connected in series.\r\n                (Batteries not included.)\r\n              </li>\r\n              <li>\r\n                Onboard LEDs visually indicate when neurostimulation is\r\n                delivered, and a precision current-sense amplifier provides a\r\n                voltage output proportional to the stimulation current.\r\n              </li>\r\n              <li>\r\n                Includes several safety features such as fuses, an emergency OFF\r\n                switch, and solid-state relays to shunt inputs with low\r\n                impedance resistors\r\n              </li>\r\n              <li>\r\n                Comes with a pair of 2 mm pin-style lead wires to connect with\r\n                standard, reusable, hydrogel-based stimulation electrodes\r\n              </li>\r\n              <li>\r\n                The optional Accessory Kit includes four 1.25-inch round and\r\n                four 2-inch square hydrogel electrodes, a pair of lead wires,\r\n                and a pair of bifurcation cables.\r\n              </li>\r\n            </ul>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <br />\r\n      <div className=\"img-container\">\r\n        <img src={img2} alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nconst Specifications = () => {\r\n    return (\r\n        <>\r\n            <Accordion defaultActiveKey={0}>\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>\r\n                        <h3>Technical Specifications</h3>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <ul>\r\n                            <li>\r\n                                Adjustable current output range: +/- 25 mA, resolution 250 µA/step\r\n                            </li>\r\n                            <li>\r\n                                Adjustable stimulation frequency range: 1 – 100 Hz, pulse-width 0 – 2 ms\r\n                            </li>\r\n                            <li>\r\n                                Maximum compliance voltage: +/- 72 V\r\n                            </li>\r\n                            <li>\r\n                                The onboard 16-bit dsPIC33F Microcontroller (40 MIPS, 256 KB flash \r\n                                memory) operates as an I²C peripheral with a programmable, 7-bit \r\n                                address.\r\n                            </li>\r\n                            <li>\r\n                                Stimulation current output can be measured using the onboard 12-bit \r\n                                ADC or an external ADC.\r\n                            </li>\r\n                            <li>\r\n                                The PCB includes a microUSB interface but the components are not \r\n                                populated. (Upon request, we are happy to provide a list of the \r\n                                necessary components.) If populated, this interface can be used \r\n                                to control NeuroStimDuino from a PC by way of serial commands.\r\n                            </li>\r\n                        </ul>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Specifications;","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nimport \"./Comparisons.style.css\";\r\n\r\nconst Comparisons = () => {\r\n    return (\r\n        <>\r\n            <Accordion defaultActiveKey={1}>\r\n                <Accordion.Item eventKey=\"2\">\r\n                    <Accordion.Header>\r\n                        <h3>Comparisons</h3>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <table className=\"comparisons-table\">\r\n                            <tr>\r\n                                <th>Product</th>\r\n                                <td className=\"product\"><b>NeuroStimDuino</b></td>\r\n                                <td className=\"product\"><b>LG-TEC ELITE</b></td>\r\n                                <td className=\"product\"><b>DS4</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Manufacturer</th>\r\n                                <td className=\"bg-active\">Neuralaxy</td>\r\n                                <td className=\"bg-active\">LGMedSupply</td>\r\n                                <td className=\"bg-active\">Digitimer</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Max. Current Output</th>\r\n                                <td className=\"bg-active\">+/- 20 mA</td>\r\n                                <td className=\"bg-active\">105 mA</td>\r\n                                <td className=\"bg-active\">+/- 10 mA</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Compliance Voltage</th>\r\n                                <td className=\"bg-active\">+/- 60 V</td>\r\n                                <td className=\"bg-active\">105 V</td>\r\n                                <td className=\"bg-active\">+/- 48 V</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>No. of Output Channels</th>\r\n                                <td className=\"bg-success\">2</td>\r\n                                <td className=\"bg-success\">2</td>\r\n                                <td className=\"bg-danger\">1</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Additional output channels possible by stacking</th>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Waveform Shape</th>\r\n                                <td className=\"bg-success\">Biphasic</td>\r\n                                <td className=\"bg-danger\">Monophasic</td>\r\n                                <td className=\"bg-success\">Biphasic</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Electronically Programmable</th>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Open Source</th>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Onboard Current Measurement</th>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>FDA approved</th>\r\n                                <td className=\"bg-danger\">No</td>\r\n                                <td className=\"bg-success\">Yes</td>\r\n                                <td className=\"bg-danger\">No</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Price</th>\r\n                                <td className=\"bg-warning\">$260</td>\r\n                                <td className=\"bg-success\">$150</td>\r\n                                <td className=\"bg-danger\">$2250</td>\r\n                            </tr>\r\n                        </table>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comparisons;","export default __webpack_public_path__ + \"static/media/NeuroStimDuino_Components.a0e70a97.png\";","import React from \"react\";\r\nimport img3 from \"../../../assets/images/NeuroStimDuino_Components.png\";\r\n\r\nimport \"./BoardLayout.style.css\";\r\n\r\nconst BoardLayout = () => {\r\n  return (\r\n    <>\r\n      <h3>Board Layout</h3>\r\n      <br />\r\n      <div className=\"img-container\">\r\n        <img src={img3} className=\"board-img\" alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardLayout;\r\n","export default __webpack_public_path__ + \"static/media/NeuroStimDuino_Pinout_Diagram.2fbed988.png\";","import React from \"react\";\r\nimport img4 from \"../../../assets/images/NeuroStimDuino_Pinout_Diagram.png\";\r\n\r\nimport \"./PinoutDiagram.style.css\";\r\n\r\nconst PinoutDiagram = () => {\r\n  return (\r\n    <>\r\n      <h3>Pinout Diagram</h3>\r\n      <br />\r\n      <div className=\"img-container\">\r\n        <img src={img4} className=\"pinout-img\" alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PinoutDiagram;\r\n","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nimport \"./Support.style.css\";\r\n\r\nconst Support = () => {\r\n    return (\r\n        <>\r\n            <Accordion defaultActiveKey={0}>\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>\r\n                        <h3>Support and Documentation</h3>\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <br />\r\n                        For instructions and video tutorials on the placement of stimulation electrodes\r\n                        to evoke various muscle contractions, please refer to {\" \"}\r\n                        <a href=\"https://www.axelgaard.com/Education\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Electrode Placement & Functional Movement\r\n                        </a>,\r\n                        courtesy of Dr. Lucinda Baker, Associate Professor (retired) at the University of Southern\r\n                        California and Axelgaard Manufacturing Co., Ltd. For NeuroStimDuino software and\r\n                        design files, please see {\" \"}\r\n                        <a href=\"https://github.com/neuralaxy/NeuroStimDuino\" target=\"_blank\" rel=\"noreferrer\">\r\n                            our GitHub repository\r\n                        </a>.\r\n                        If you have questions, you can use the {\" \"}\r\n                        <a href=\"https://www.crowdsupply.com/neuralaxy/neurostimduino/ask-question\" target=\"_blank\" rel=\"noreferrer\">\r\n                            Ask a technical question\r\n                        </a>\r\n                        {\" \"} link below.\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Support;","import React from \"react\";\r\nimport Description from \"./Description/Description.component\";\r\nimport Features from \"./Features/Features.component\";\r\nimport Specifications from \"./Specifications/Specifications.component\";\r\nimport Comparisons from \"./Comparisons/Comparisons.component\";\r\nimport BoardLayout from \"./BoardLayout/BoardLayout.component\";\r\nimport PinoutDiagram from \"./PinoutDiagram/PinoutDiagram.component\";\r\nimport Support from \"./Support/Support.component\";\r\n\r\nimport \"./Landing.style.css\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <section id=\"landing\">\r\n      <div className=\"container\">\r\n        <div className=\"heading\">\r\n          <h1>NeuroStimDuino</h1>\r\n          <span>by Neuralaxy</span>\r\n        </div>\r\n        <div className=\"desc\">\r\n          <h4>\r\n            An open source neurostimulator for students, researchers, and\r\n            hobbyists interested in neuroscience\r\n          </h4>\r\n        </div>\r\n        <div className=\"product-container\">\r\n          <div className=\"product-desc\">\r\n            <p>\r\n              <Description />\r\n              <br />\r\n              <br />\r\n              <Features />\r\n              <br />\r\n              <br />\r\n              <Specifications />\r\n              <br />\r\n              <Comparisons />\r\n              <br />\r\n              <BoardLayout />\r\n              <br />\r\n              <br />\r\n              <PinoutDiagram />\r\n              <br />\r\n              <br />\r\n              <Support />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-1.eb629ce4.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-2.187c1028.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-3.828aa284.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-4.ab1e3cd1.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-5.232ec704.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-6.733002e0.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-7.4a4bc4b8.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-8.067b578e.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-9.dea42279.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-1_Image-10.8654aef0.jpg\";","import React from \"react\";\r\nimport img1 from \"../../../assets/images/Tutorial-1_Image-1.png\";\r\nimport img2 from \"../../../assets/images/Tutorial-1_Image-2.png\";\r\nimport img3 from \"../../../assets/images/Tutorial-1_Image-3.jpg\";\r\nimport img4 from \"../../../assets/images/Tutorial-1_Image-4.jpg\";\r\nimport img5 from \"../../../assets/images/Tutorial-1_Image-5.jpg\";\r\nimport img6 from \"../../../assets/images/Tutorial-1_Image-6.png\";\r\nimport img7 from \"../../../assets/images/Tutorial-1_Image-7.jpg\";\r\nimport img8 from \"../../../assets/images/Tutorial-1_Image-8.jpg\";\r\nimport img9 from \"../../../assets/images/Tutorial-1_Image-9.png\";\r\nimport img10 from \"../../../assets/images/Tutorial-1_Image-10.jpg\";\r\n\r\nimport \"./Tutorial1.style.css\";\r\n\r\nconst Tutorial1 = () => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          To get started, first and foremost familiarize yourself with\r\n          NeuroStimDuino features, board layout and pin diagram.\r\n        </li>\r\n        <li>\r\n          If you just ordered the NeuroStimDuino board (without the accessory\r\n          pack), then you will have received the following components.\r\n          <br />\r\n          <img src={img1} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          If you have ordered the accessory pack as well, then you will also\r\n          receive hydrogel electrodes and extra cables (seen below). The\r\n          hydrogel electrodes are required if you plan to stimulate a fake\r\n          muscle (such as a Zucchini) or for your research.\r\n          <br />\r\n          <img src={img2} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          Finally, before you begin, please remember to review the safety\r\n          guidelines listed at the end of this tutorial and follow the\r\n          recommendations mentioned therein.\r\n        </li>\r\n      </ul>\r\n      <h4>Hardware Setup</h4>\r\n      <ul>\r\n        <li>\r\n          The battery holder included requires two 18650 Li-ion batteries (not\r\n          included) to be connected in series. The battery holder allows the\r\n          batteries to be oriented in series or parallel connection.\r\n          Unfortunately, the battery holders we shipped only have Chinese labels\r\n          to indicate the series or parallel oritentation. Make sure you connect\r\n          the batteries in series (as shown below) and not in parallel.\r\n          Alternately, you can power NeuroStimDuino using your own battery\r\n          source between 6-20V. We do not recommend powering NeuroStimDuino\r\n          using an AC-DC adapter. However, if you must use an adapter, then you\r\n          need an adapter with atleast 2 Amps output rating.\r\n          <br />\r\n          <img src={img3} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          For connecting the stimulation cables, you will have to remove the\r\n          cable shroud or sheath cover as shown below and then plug it into the\r\n          0.7mm DC Jack.\r\n          <br />\r\n          <img src={img4} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          Ensure the jumper settings for selecting the shape of the current\r\n          waveforms are set to \"x1\" or Symmetrical, as shown below.\r\n          <br />\r\n          <img src={img5} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          The High-Voltage Power Switch S3 turns ON/OFF the +/-72V DC-DC\r\n          converter (NMT0572SC). When using NeuroStimDuino for the first time we\r\n          recommend starting with the switch in OFF position. Afterwards, once\r\n          you are ready to stimulate then flip the switch ON. That way even if\r\n          you accidentally turn ON the stimulation, it will not have any effect\r\n          because the high-voltage source will be OFF. Plus it will also help\r\n          extend battery life.\r\n          <br />\r\n          <img src={img6} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          To control NeuroStimDuino using an Arduino Due or Mega, stack\r\n          NeuroStimDuino on top of the Arduino board by aligning the hearder\r\n          pins, as shown below.\r\n          <br />\r\n          <img src={img7} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          Once the hardware setup is complete, the amber or yellow Emergency-OFF\r\n          LED will remain continuously ON. Also TEST_LED1 and TEST_LED2 will\r\n          start blinking at a rate of 10 Hz\r\n          <br />\r\n          <img src={img8} alt=\"\" />\r\n        </li>\r\n      </ul>\r\n      <h4>Software Setup</h4>\r\n      <ul>\r\n        <li>\r\n          Next, you will need to download the latest version of our Arduino\r\n          library. Read the full update here and remember to install the\r\n          [SerialCommands library]\r\n          (https://github.com/ppedro74/Arduino-SerialCommands) from Pedro\r\n          Pereira. Next, upload the example code\r\n          NeuroStimDuino_SerialControl.ino onto the Arduino.\r\n        </li>\r\n        <li>\r\n          To write instructions to control NeuroStimDuino, you will use the\r\n          Serial terminal that is in-built Arduino IDE (Tools &gt; Serial\r\n          Monitor). Once you open the Serial Monitor, set the baudrate to 115200\r\n          bps and add \"CR+LF\" at the end of each command. When you power either\r\n          the Arduino or NeuroStimDuino board via the DC plug, you will see test\r\n          LEDs 1 & 2 flashing on the NeuroStimDuino board. These LEDs are\r\n          flashing with the default stimulation frequency of 10Hz. Now you can\r\n          enter some example commands into the Serial Monitor, one command at a\r\n          time and then press enter.\r\n        </li>\r\n        <li>\r\n          After uploading the example code NeuroStimDuino_SerialControl.ino and\r\n          making the connections as above, when you first open the Serial\r\n          terminal you will see the following welcome message. This mean that a\r\n          successful connection between Arduino and NeuroStimDuino has been\r\n          established. It will also give a readout of the current stimulation\r\n          parameters for each channel.\r\n          <br />\r\n          <img src={img9} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          You can type in some example commands into Serial Monitor and change\r\n          the settings for the stimulator (type one statement at a time). Also,\r\n          the commands are case-sensitive, so type it in all caps.\r\n        </li>\r\n      </ul>\r\n      <h4>Moving Forward</h4>\r\n      <ul>\r\n        <li>\r\n          This completes this introductory tutorial. From here on, if you would\r\n          like to connect cables and electrodes and actuatlly stimulate a fake\r\n          Zucchini muscle, then follow the setup instructions shown in our April\r\n          Update published on CrowdSupply.\r\n        </li>\r\n        <li>\r\n          If you want connect multiple NeuroStimDuinos together and control them\r\n          using a single Arduino, then look up the steps and instructions posted\r\n          earlier.\r\n          <br />\r\n          One important change required in hardware when stacking 2 or more\r\n          NeuroStimDuinos is to disconnect pins 5 & 6 on JP3. Another way to\r\n          identify these pins is that they normally connect with PWM pins 9 and\r\n          10 on Arduino Due or Mega. The reason for this is that these pins can\r\n          also be used to drive TEST_LED1 and TEST_LED2 of NeuroStimDuino.\r\n          Therefore, if you connect them together on 2 NeuroStimDuinos, the LEDs\r\n          will not function properly and can be confusing. Hence, to avoid any\r\n          cross-talk, its best to fold these pins out of the way as shown below.\r\n          <br />\r\n          <img src={img10} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          We hope you enjoy tinkering with NeuroStimDuino and use it for all\r\n          your neuroscience experiments. If you face any issue with the device\r\n          or are stuck anytime, feel free to write to us on{\" \"}\r\n          <a href=\"mailto:contactus@neuralaxy.com\">contactus@neuralaxy.com</a>{\" \"}\r\n          or submit an issue here.\r\n        </li>\r\n      </ul>\r\n      <h4>Important Safety Guidelines</h4>\r\n      <ul>\r\n        <li>\r\n          NeuroStimDuino is not an FDA approved product for clinical use and it\r\n          is intended for RESEARCH PURPOSES ONLY.\r\n        </li>\r\n        <li>\r\n          NeuroStimDuino is not intended for human use or animal use, without\r\n          receiving prior approval from a local ethics committee such as\r\n          Institutional Review Boards and Institutional Animal Care and Use\r\n          Committees\r\n        </li>\r\n        <li>\r\n          Under no circumstances, should the stimulation electrodes be placed\r\n          across the chest or close to the heart\r\n        </li>\r\n        <li>\r\n          NeuroStimDuino requires an external DC input voltage from 6-20V to\r\n          operate. We strongly recommend to use an external battery for this and\r\n          avoid the use of an AC adapter or anything that's plugged into the AC\r\n          mains\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tutorial1;\r\n","export default __webpack_public_path__ + \"static/media/Tutorial-2_Image-1.5dacc327.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-2_Image-2.8ec64b29.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-2_Image-3.744e6770.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-2_Image-4.0d01016d.png\";","export default __webpack_public_path__ + \"static/media/Tutorial-2_Image-5.fc042f7b.png\";","import React from \"react\";\r\nimport img1 from \"../../../assets/images/Tutorial-2_Image-1.png\";\r\nimport img2 from \"../../../assets/images/Tutorial-2_Image-2.jpg\";\r\nimport img3 from \"../../../assets/images/Tutorial-2_Image-3.jpg\";\r\nimport img4 from \"../../../assets/images/Tutorial-2_Image-4.png\";\r\nimport img5 from \"../../../assets/images/Tutorial-2_Image-5.png\";\r\n\r\nimport \"./Tutorial2.style.css\";\r\n\r\nconst Tutorial2 = () => {\r\n  return (\r\n    <>\r\n      <h4>Tips on Electrode Placement and Muscle Mapping</h4>\r\n      <p>\r\n        This tutorial will share tips on how to place the hydrogel electrodes on\r\n        the surface of the skin in order to stimulate underlying muscles. These\r\n        tips will be helpful not just when using NeuroStimDuino, but for any\r\n        neurostimulator. But first, let's review some{\" \"}\r\n        <b>important safety guidelines:</b>\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          NeuroStimDuino is not an FDA approved product for clinical use and it\r\n          is intended for <b>RESEARCH PURPOSES ONLY</b>.\r\n        </li>\r\n        <li>\r\n          NeuroStimDuino is not intended for human use or animal use, without\r\n          receiving prior approval from a local ethics committee such as\r\n          Institutional Review Boards and Institutional Animal Care and Use\r\n          Committees\r\n        </li>\r\n        <li>\r\n          Under no circumstances, should the stimulation electrodes be placed\r\n          across the chest or close to the heart\r\n        </li>\r\n        <li>\r\n          NeuroStimDuino requires an external DC input voltage from 6-20V to\r\n          operate. We <b>strongly</b> recommend to use an external battery for\r\n          this and avoid the use of an AC adapter or anything that's plugged\r\n          into the AC mains\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        In case you are wondering, how exactly are you suppose to learn to apply\r\n        neurostimulation if you can't use it without getting all the approvals,\r\n        you are not alone. You could use a frog or a cockroach for your\r\n        experiments and BackyardBrains has provided a great article on how to do\r\n        this in{\" \"}\r\n        <a\r\n          href=\"https://backyardbrains.com/experiments/Galvani_Volta\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          humane way\r\n        </a>\r\n        . (Scroll all the way to the video at the bottom to see how a\r\n        cockroach's leg twitches under electricity.) However, if you still don't\r\n        want to mess with a cockroach or want a completely humane way to do your\r\n        experiments, check out our tips on safely exploring neurostimulation\r\n        using just{\" \"}\r\n        <a\r\n          href=\"https://www.crowdsupply.com/neuralaxy/neurostimduino/updates/tips-on-electrode-placement\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Zucchinis\r\n        </a>\r\n      </p>\r\n      <p>\r\n        If you have already <b>received approval</b> from your ethics committee\r\n        and ready to start stimulating human muscles, then lets dive into it.\r\n        You will probably recall from one of the demo videos, how by using 3\r\n        electrodes on the forearm and 1 on the palm, I was able to implement a\r\n        cylindrical grasp and hold a cup\r\n      </p>\r\n      <img src={img1} alt=\"\" />\r\n      <p>\r\n        Today, I will share tips on how to map muscles of the hand, so that you\r\n        know where exactly to attach the hydrogel electrodes onto the skin.\r\n        These tips will be helpful not just when using NeuroStimDuino, but for\r\n        any neurostimulator. First, lets review some anatomy of the hand.\r\n      </p>\r\n      <img src={img2} alt=\"\" />\r\n      <h4>Review Anatomy of Hand Flexors and Extensors</h4>\r\n      <p>\r\n        To generate finger flexion or extension, we need to stimulate the flexor\r\n        digitorum superficialis and extensor digitorum muscles, as highlighted\r\n        above. The flexor digitorum superficialis muscle is slightly deeper and\r\n        lies beneath a pair of flexor carpi muscles that control wrist movement.\r\n        Therefore, targeting the finger flexors can be tricky and you might\r\n        inadvertently cause the wrist to flex as well. However, by using\r\n        electrodes that are not too big and by placing them appropriately as\r\n        well as keeping the stimulation amplitude low, you should still be able\r\n        to flex all the fingers. Also, the extensors are bunched together and\r\n        are near the skin surface. Hence, they can be simultaneously activated\r\n        using one electrode placed on the back of the forearm. Note that in the\r\n        first figure, I additionally placed a small round electrode near the\r\n        base of the thumb. This electrode was working in parallel with the\r\n        finger flexor electrode by using cable splitters on channel 1, so as to\r\n        get stronger thumb flexion as well.\r\n      </p>\r\n      <h4>Sourcing and Sinking Current through a Muscle</h4>\r\n      <img src={img3} alt=\"\" />\r\n      <p>\r\n        The above sketch is a rough diagram of how neurostimulation works. You\r\n        can imagine the stimulator (e.g. NeuroStimDuino) to behave as two\r\n        constant current sources connected in series. Each current source is\r\n        powered by a high voltage source (i.e +/-72V) so that it can drive\r\n        several milliamps of current through the skin surface (a.k.a compliance\r\n        voltage). The top current source is active during the positive or anodic\r\n        phase of the stimulation pulse (shown by <b>pink</b> marker). The bottom\r\n        current sink is active during the negative or cathodic phase of the\r\n        stimulation pulse (shown by <b>green</b> marker). The current is sourced\r\n        or sink from the muscles using the hydrogel electrodes placed on the\r\n        skin surface. One electrode is placed over the muscle belly (a.k.a\r\n        **Working Electrode**) and acts as the main entry or exit point for\r\n        current. A second electrode is placed at the tail end of the muscle\r\n        (a.k.a **Return Electrode**), where it connects to the stimulator\r\n        ground, completing the return path for the current.\r\n      </p>\r\n      <h4>Use a single \"Return\" electrode when using multiple channels</h4>\r\n      <p>\r\n        The ground connection is common for all the stimulation channels. So, if\r\n        you are using multiple stimulation channels, you only need to connect\r\n        one return electrode. If you are stimulating both the finger flexors and\r\n        extensors, then we recommend placing the return electrode on the lateral\r\n        side of the wrist (as shown in the topmost figure). If you are\r\n        stimulating only the flexors, then you can place the return electrode on\r\n        the median side of the wrist (as shown in below figure).\r\n      </p>\r\n      <h4>Waveform Parameters</h4>\r\n      <p>\r\n        In the above white-board figure, the waveform is defined by specifying\r\n        parameters such as amplitude (AMPL), pulse duration (DURN), pulse\r\n        frequency (FREQ), and inter-phase delay (IDLY). For the cup lifting\r\n        experiment, we set these values as AMPL = 15mA, DURN = 500usec, FREQ =\r\n        30Hz, IDLY = 200usec. Kindly refer to the I2C library for an explanation\r\n        of these terms.\r\n      </p>\r\n      <h4>Mapping Muscle Location using a Handheld Probe</h4>\r\n      <p>\r\n        When you first start placing electrodes on the arm, it can be\r\n        frustrating to know where exactly to place the electrodes. You can refer\r\n        to the anatomy and try to feel the contraction of your muscles, but what\r\n        definitely works is to use a stimulation probe for this purpose. There\r\n        are some commercially available TENS probes, also called ball-point pen\r\n        probes. I found a simple and cheap way to make my own. I used a 1\" round\r\n        electrode, some tape, borrowed my son's percussion stick, and Voila! my\r\n        handheld mapping probe was ready.\r\n      </p>\r\n      <img src={img4} alt=\"\" />\r\n      <h4>Steps to map Muscle Location using Handheld Probe</h4>\r\n      <ol>\r\n        <li>\r\n          Connect the <b>red</b> lead wire of the channel output to the probe\r\n          and connect the <b>black</b> lead wire to a return electrode placed on\r\n          the wrist.\r\n        </li>\r\n        <li>\r\n          Program the NeuroStimDuino to continuously generate stim. pulses at a\r\n          moderately high intensity (_to be covered in more detail in an\r\n          upcoming update_).\r\n        </li>\r\n        <li>\r\n          Touch the surface of the skin with the probe. Try moving it around by\r\n          few centimeters and you should be able to start seeing your fingers\r\n          slightly move.\r\n        </li>\r\n        <li>\r\n          With some patience and practise, I was be able to isolate individual\r\n          finger movements as shown below.\r\n        </li>\r\n        <li>\r\n          Once you have the index, middle and ring or pinky mapped out, place a\r\n          large square electrode such that it encompasses most of the mapped\r\n          sites (as shown in the topmost figure)\r\n        </li>\r\n        <li>\r\n          Repeat the same procedure for mapping the extensor muscle locations.\r\n        </li>\r\n      </ol>\r\n      <img src={img5} alt=\"\" />\r\n      <h4>Additional Resources</h4>\r\n      <p>\r\n        If you are interested in further instructions and video tutorials on the\r\n        placement of stimulation electrodes to evoke various hand and leg\r\n        movements, please refer to{\" \"}\r\n        <a\r\n          href=\"https://www.axelgaard.com/Education\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Electrode Placement & Functional Movement\r\n        </a>\r\n        , courtesy of Dr. Lucinda Baker, Associate Professor (retired) at the\r\n        University of Southern California and Axelgaard Manufacturing Co., Ltd.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tutorial2;\r\n","export default __webpack_public_path__ + \"static/media/Tutorial-3_Image-1.4a4bc4b8.jpg\";","export default __webpack_public_path__ + \"static/media/Tutorial-3_Image-2.d32b2310.jpg\";","import React from \"react\";\r\nimport Vimeo from \"@u-wave/react-vimeo\";\r\nimport img1 from \"../../../assets/images/Tutorial-3_Image-1.jpg\";\r\nimport img2 from \"../../../assets/images/Tutorial-3_Image-2.jpg\";\r\n\r\nimport \"./Tutorial3.style.css\";\r\n\r\nconst Tutorial3 = () => {\r\n  return (\r\n    <>\r\n      <h4>Communicating with Multiple NeuroStimDuinos on a Single I²C Bus</h4>\r\n      <p>\r\n        We will end this week’s update by demonstrating how to control two\r\n        NeuroStimDuino using a single Arduino. The default I²C address for\r\n        NeuroStimDuino is 26. Using the ADDR command from the NeuroStimDuino\r\n        library, you can change this address and communicate with multiple\r\n        devices on the same I²C bus. The syntax for ADDR command is{\" \"}\r\n        <span className=\"highlight\">ADDR new_address program/switch_only</span>,\r\n        where:\r\n        <ul>\r\n          <li>\r\n            <span className=\"highlight\">new_address</span> can be any value\r\n            between 8 to 119, and\r\n          </li>\r\n          <li>\r\n            <span className=\"highlight\">program/switch_only</span> is a binary\r\n            value. When it is set to <span className=\"highlight\">1</span>, the\r\n            NeuroStimDuino's current address will be changed to{\" \"}\r\n            <span className=\"highlight\">new_address</span>, and the Arduino will\r\n            start sending I²C messages to that address. When{\" \"}\r\n            <span className=\"highlight\">program/switch_only</span>\r\n            is set to <span className=\"highlight\">0</span>, NeuroStimDuino's\r\n            current address will not be changed. Only the peripheral address\r\n            stored within Arduino will be updated so that it can start\r\n            communicating with a different peripheral device.\r\n          </li>\r\n        </ul>\r\n      </p>\r\n      <h4>\r\n        Setup for Changing I²C Address & Connecting Multiple NeuroStimDuinos\r\n      </h4>\r\n      <ol>\r\n        <li>\r\n          Connect the first NeuroStimDuino to an Arduino:\r\n          <img src={img1} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          Change its I²C address from 26 (default) to any other value (e.g. 30)\r\n          using the serial terminal:\r\n          <br />\r\n          <div className=\"code-segment\">ADDR 30 1</div>\r\n        </li>\r\n        <li>\r\n          Now stack the second NeuroStimDuino on top of the first. Use the\r\n          default I²C address for the second device or change it using the\r\n          instructions in Step 2:\r\n          <img src={img2} alt=\"\" />\r\n        </li>\r\n        <li>\r\n          You are now ready to independently control both NeuroStimDuinos.\r\n        </li>\r\n        <li>\r\n          Type in the following command using Arduino’s serial terminal to\r\n          stimulate two Zucchini muscles (video below):\r\n          <br />\r\n          <div className=\"code-segment\">\r\n            ADDR 30 1\r\n            <br />\r\n            FREQ 1 15\r\n            <br />\r\n            FREQ 2 15\r\n            <br />\r\n            DURN 1 2000\r\n            <br />\r\n            DURN 2 2000\r\n            <br />\r\n            AMPL 1 100\r\n            <br />\r\n            AMPL 2 100\r\n            <br />\r\n            DELY 1 5\r\n            <br />\r\n            DELY 2 10\r\n            <br />\r\n            ENAB 1 1\r\n            <br />\r\n            ENAB 2 1\r\n            <br />\r\n            STIM 1 0 1\r\n            <br />\r\n            STIM 2 0 1\r\n            <br />\r\n            ADDR 26 0 &nbsp; &nbsp; &nbsp; &nbsp; // Connect 2nd NeuroStimDuino\r\n            and start communicating with it. Address will not be changed\r\n            <br />\r\n            FREQ 1 5\r\n            <br />\r\n            FREQ 2 5\r\n            <br />\r\n            DURN 1 2000\r\n            <br />\r\n            DURN 2 2000\r\n            <br />\r\n            AMPL 1 100\r\n            <br />\r\n            AMPL 2 100\r\n            <br />\r\n            DELY 1 5\r\n            <br />\r\n            DELY 2 10\r\n            <br />\r\n            ENAB 1 1\r\n            <br />\r\n            ENAB 2 1\r\n            <br />\r\n            STIM 1 0 1\r\n            <br />\r\n            STIM 2 0 1 &nbsp; &nbsp; &nbsp; &nbsp; // At the end of the\r\n            experiment stop stimulation on both boards\r\n            <br />\r\n            STOP 1\r\n            <br />\r\n            STOP 2\r\n            <br />\r\n            ADDR 30 0 &nbsp; &nbsp; &nbsp; &nbsp; // Switch communication to 1st\r\n            device\r\n            <br />\r\n            STOP 1\r\n            <br />\r\n            STOP 2\r\n          </div>\r\n        </li>\r\n      </ol>\r\n      <div className=\"video-player\">\r\n        <Vimeo\r\n          className=\"tutorial-video\"\r\n          video=\"https://player.vimeo.com/video/542732824?h=4983df76a0\"\r\n          autoplay={false}\r\n          responsive\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tutorial3;\r\n","import React, { useState } from \"react\";\r\nimport Tutorial1 from \"./Tutorial1/Tutorial1.component\";\r\nimport Tutorial2 from \"./Tutorial2/Tutorial2.component\";\r\nimport Tutorial3 from \"./Tutorial3/Tutorial3.component\";\r\n\r\nimport \"./Tutorials.style.css\";\r\n\r\nconst Tutorials = () => {\r\n  const [tutorialNumber, setTutorialNumber] = useState(1);\r\n\r\n  const toggleSelected = (id) => {\r\n    var bar1 = document.getElementById(\"bar1\");\r\n    var bar2 = document.getElementById(\"bar2\");\r\n    var bar3 = document.getElementById(\"bar3\");\r\n    switch (id) {\r\n      case \"bar1\":\r\n        bar1.classList.add(\"selected\");\r\n        bar2.classList.remove(\"selected\");\r\n        bar3.classList.remove(\"selected\");\r\n        break;\r\n      case \"bar2\":\r\n        bar1.classList.remove(\"selected\");\r\n        bar2.classList.add(\"selected\");\r\n        bar3.classList.remove(\"selected\");\r\n        break;\r\n      case \"bar3\":\r\n        bar1.classList.remove(\"selected\");\r\n        bar2.classList.remove(\"selected\");\r\n        bar3.classList.add(\"selected\");\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section id=\"tutorials\">\r\n      <div className=\"container\">\r\n        <div className=\"tutorials-container\">\r\n          <div className=\"left-bar\">\r\n            <div\r\n              className=\"left-bar-item selected\"\r\n              id=\"bar1\"\r\n              onClick={() => {\r\n                toggleSelected(\"bar1\");\r\n                setTutorialNumber(1);\r\n              }}\r\n            >\r\n              <h5>\r\n                <b>Tutorial 1:</b> Getting Started\r\n              </h5>\r\n            </div>\r\n            <div\r\n              className=\"left-bar-item\"\r\n              id=\"bar2\"\r\n              onClick={() => {\r\n                toggleSelected(\"bar2\");\r\n                setTutorialNumber(2);\r\n              }}\r\n            >\r\n              <h5>\r\n                <b>Tutorial 2:</b> Electrodes Placement\r\n              </h5>\r\n            </div>\r\n            <div\r\n              className=\"left-bar-item\"\r\n              id=\"bar3\"\r\n              onClick={() => {\r\n                toggleSelected(\"bar3\");\r\n                setTutorialNumber(3);\r\n              }}\r\n            >\r\n              <h5>\r\n                <b>Tutorial 3:</b> Controlling Multiple NeuroStimDuinos on a\r\n                single I²C Bus\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-bar\">\r\n            {tutorialNumber === 1 ? (\r\n              <div>\r\n                <h3>Tutorial 1: Getting Started</h3>\r\n                <Tutorial1 />\r\n              </div>\r\n            ) : tutorialNumber === 2 ? (\r\n              <div>\r\n                <h3>Tutorial 2: Electrodes Placement</h3>\r\n                <Tutorial2 />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h3>\r\n                  Tutorial 3: Controlling Multiple NeuroStimDuinos on a single\r\n                  I²C Bus\r\n                </h3>\r\n                <Tutorial3 />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tutorials;\r\n","export default __webpack_public_path__ + \"static/media/NeuroStimDuino_Demo_final.42a98883.mp4\";","import React from \"react\";\r\n// import Vimeo from \"@u-wave/react-vimeo\";\r\nimport demo1 from \"../../assets/videos/NeuroStimDuino_Demo_final.mp4\";\r\n\r\nimport \"./Demo.style.css\";\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <section id=\"demo\">\r\n      <div className=\"container\">\r\n        <div className=\"demo-container\">\r\n          <h3 className=\"heading\">\r\n            Here you will find demos of NeuroStimDuino in action\r\n          </h3>\r\n          <div className=\"demo-video\">\r\n            <video controls>\r\n              <source src={demo1} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nimport \"./Contact.style.css\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id=\"contact\">\r\n      <div className=\"container\">\r\n        <div className=\"contact-container\">\r\n          <Card className=\"shadow\">\r\n            <Card.Body>\r\n              <Row>\r\n                <Col className=\"col-md-6 border-end\">\r\n                  <h1 className=\"contact-heading\">Contact Form</h1>\r\n                  <hr />\r\n                  <Form.Group>\r\n                    <label htmlFor=\"name\" className=\"mb-1\">\r\n                      Full Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      className=\"form-control mb-2\"\r\n                      placeholder=\"Enter Full Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label htmlFor=\"mobile\" className=\"mb-1\">\r\n                      Mobile Number\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"name\"\r\n                      className=\"form-control mb-2\"\r\n                      placeholder=\"Enter Mobile Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label htmlFor=\"email\" className=\"mb-1\">\r\n                      Email Address\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className=\"form-control mb-2\"\r\n                      placeholder=\"Enter Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label htmlFor=\"message\" className=\"mb-1\">\r\n                      Message\r\n                    </label>\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      className=\"form-control mb-2\"\r\n                      placeholder=\"Type your message...\"\r\n                    ></textarea>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"py-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-custom shadow w-100\"\r\n                    >\r\n                      Send\r\n                    </button>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col className=\"col-md-6\">\r\n                  <h2 className=\"main-heading\">Address Information</h2>\r\n                  <div className=\"underline\"></div>\r\n                  <p>Neuralaxy LLC, registered in Delaware, USA</p>\r\n                  {/* <p>+91 93608 42073</p> */}\r\n                  <p>\r\n                    Email:{\" \"}\r\n                    <a href=\"mailto:contactus@neuralaxy.com\">\r\n                      contactus@neuralaxy.com\r\n                    </a>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Header from \"./components/Header/Header.component\";\r\nimport Landing from \"./components/Landing/Landing.component\";\r\nimport Tutorials from \"./components/Tutorials/Tutorials.component\";\r\nimport Demo from \"./components/Demo/Demo.component\";\r\n// import Team from \"./components/Team/Team.component\";\r\nimport Contact from \"./components/Contact/Contact.component\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className=\"main\">\r\n            <Landing />\r\n            {/* <Container className=\"container-box rounded\">\r\n              <Landing />\r\n            </Container> */}\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/tutorials\">\r\n          <div className=\"main\">\r\n            <Container className=\"container-box rounded\">\r\n              <Tutorials />\r\n            </Container>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/demo\">\r\n          <div className=\"main\">\r\n            <Container className=\"container-box rounded\">\r\n              <Demo />\r\n            </Container>\r\n          </div>\r\n        </Route>\r\n        {/* <Route path=\"/team\">\r\n          <div className=\"main\">\r\n            <Container className=\"container-box rounded\">\r\n              <Team />\r\n            </Container>\r\n          </div>\r\n        </Route> */}\r\n        <Route path=\"/contact\">\r\n          <div className=\"main\">\r\n            <Container className=\"container-box rounded\">\r\n              <Contact />\r\n            </Container>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}